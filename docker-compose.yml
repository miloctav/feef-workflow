services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: feef-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-feef_db}
      POSTGRES_USER: ${POSTGRES_USER:-feef_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - feef-network
    # Ports exposés seulement pour le développement/debug
    # En production, supprimez ces lignes pour plus de sécurité
    ports:
      - "54320:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-feef_user} -d ${POSTGRES_DB:-feef_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Garage Object Storage (S3-compatible)
  garage:
    image: dxflrs/garage:v2.1.0
    container_name: feef-garage
    restart: unless-stopped
    environment:
      GARAGE_RPC_SECRET: ${GARAGE_RPC_SECRET:-change_me_in_production}
      GARAGE_ADMIN_TOKEN: ${GARAGE_ADMIN_TOKEN:-change_me_in_production}
      GARAGE_METRICS_TOKEN: ${GARAGE_METRICS_TOKEN:-change_me_in_production}
    volumes:
      - garage_meta:/var/lib/garage/meta
      - garage_data:/var/lib/garage/data
      - ./garage.toml:/etc/garage.toml:ro
    ports:
      - "3900:3900"  # S3 API
      - "3901:3901"  # RPC (internal)
      - "3903:3903"  # Admin API
    networks:
      - feef-network

  # Nuxt Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: feef-app
    restart: unless-stopped
    # Load environment variables from .env file
    env_file:
      - .env
    environment:
      # Override/force specific values for Docker environment
      NODE_ENV: production
      # Database connection variables for Docker network
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      # Database URL (constructed from .env variables) - override dev value
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      SEED_TOKEN: 8b0bde84fabc16e03fe93b018c495bde
      JWT_SECRET: ${JWT_SECRET}
      # All other variables (POSTGRES_*, GARAGE_*, NUXT_SESSION_PASSWORD, JWT_SECRET,
      # RESEND_*, DEV_MODE) are loaded from .env file via env_file directive
    depends_on:
      garage:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - feef-network
    expose:
      - "3000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: feef-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - app
    networks:
      - feef-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Let's Encrypt Certbot
  certbot:
    image: certbot/certbot
    container_name: feef-certbot
    restart: unless-stopped
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
    driver: local
  garage_meta:
    driver: local
  garage_data:
    driver: local
  certbot_certs:
    driver: local
  certbot_www:
    driver: local

networks:
  feef-network:
    driver: bridge
